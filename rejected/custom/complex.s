
complex.o:	file format elf64-bpf

Disassembly of section xdp:

0000000000000000 <collect_ips_prog>:
; int collect_ips_prog(struct xdp_md *ctx) {
       0:	b7 05 00 00 00 00 00 00	r5 = 0x0
;     char *data              = (char *)(long)ctx->data;
       1:	61 12 00 00 00 00 00 00	r2 = *(u32 *)(r1 + 0x0)
;     char *data_end          = (char *)(long)ctx->data_end;
       2:	61 11 04 00 00 00 00 00	r1 = *(u32 *)(r1 + 0x4)
       3:	b7 03 00 00 fa 01 00 00	r3 = 0x1fa

0000000000000020 <LBB0_1>:
       4:	bf 54 00 00 00 00 00 00	r4 = r5
;         if (data_end < data + HEADER_LEN) {
       5:	bf 25 00 00 00 00 00 00	r5 = r2
       6:	07 05 00 00 06 00 00 00	r5 += 0x6
       7:	2d 15 48 00 00 00 00 00	if r5 > r1 goto +0x48 <LBB0_13>
;         if (data[0] == 'H' && data[1] == 'o' && data[2] == 's' && data[3] == 't' &&
       8:	71 25 00 00 00 00 00 00	r5 = *(u8 *)(r2 + 0x0)
       9:	55 05 0a 00 48 00 00 00	if r5 != 0x48 goto +0xa <LBB0_8>
      10:	71 25 01 00 00 00 00 00	r5 = *(u8 *)(r2 + 0x1)
      11:	55 05 08 00 6f 00 00 00	if r5 != 0x6f goto +0x8 <LBB0_8>
      12:	71 25 02 00 00 00 00 00	r5 = *(u8 *)(r2 + 0x2)
      13:	55 05 06 00 73 00 00 00	if r5 != 0x73 goto +0x6 <LBB0_8>
      14:	71 25 03 00 00 00 00 00	r5 = *(u8 *)(r2 + 0x3)
      15:	55 05 04 00 74 00 00 00	if r5 != 0x74 goto +0x4 <LBB0_8>
;             data[4] == ':' && data[5] == ' ') {
      16:	71 25 04 00 00 00 00 00	r5 = *(u8 *)(r2 + 0x4)
      17:	55 05 02 00 3a 00 00 00	if r5 != 0x3a goto +0x2 <LBB0_8>
      18:	71 25 05 00 00 00 00 00	r5 = *(u8 *)(r2 + 0x5)
;         if (data[0] == 'H' && data[1] == 'o' && data[2] == 's' && data[3] == 't' &&
      19:	15 05 06 00 20 00 00 00	if r5 == 0x20 goto +0x6 <LBB0_9>

00000000000000a0 <LBB0_8>:
;     for (__u16 i = 0; i <= 512 - HEADER_LEN; i++) {
      20:	bf 45 00 00 00 00 00 00	r5 = r4
      21:	07 05 00 00 01 00 00 00	r5 += 0x1
;         data++;
      22:	07 02 00 00 01 00 00 00	r2 += 0x1
;     for (__u16 i = 0; i <= 512 - HEADER_LEN; i++) {
      23:	57 04 00 00 ff ff 00 00	r4 &= 0xffff
      24:	2d 43 eb ff 00 00 00 00	if r3 > r4 goto -0x15 <LBB0_1>
      25:	05 00 36 00 00 00 00 00	goto +0x36 <LBB0_13>

00000000000000d0 <LBB0_9>:
      26:	b7 03 00 00 00 00 00 00	r3 = 0x0
;         struct server_name sn = {"a", 0};
      27:	6b 3a f8 ff 00 00 00 00	*(u16 *)(r10 - 0x8) = r3
      28:	7b 3a f0 ff 00 00 00 00	*(u64 *)(r10 - 0x10) = r3
      29:	7b 3a e8 ff 00 00 00 00	*(u64 *)(r10 - 0x18) = r3
      30:	7b 3a e0 ff 00 00 00 00	*(u64 *)(r10 - 0x20) = r3
      31:	7b 3a d8 ff 00 00 00 00	*(u64 *)(r10 - 0x28) = r3
      32:	7b 3a d0 ff 00 00 00 00	*(u64 *)(r10 - 0x30) = r3
      33:	7b 3a c8 ff 00 00 00 00	*(u64 *)(r10 - 0x38) = r3
      34:	7b 3a c0 ff 00 00 00 00	*(u64 *)(r10 - 0x40) = r3
      35:	7b 3a b8 ff 00 00 00 00	*(u64 *)(r10 - 0x48) = r3
      36:	7b 3a b0 ff 00 00 00 00	*(u64 *)(r10 - 0x50) = r3
      37:	7b 3a a8 ff 00 00 00 00	*(u64 *)(r10 - 0x58) = r3
      38:	7b 3a a0 ff 00 00 00 00	*(u64 *)(r10 - 0x60) = r3
      39:	7b 3a 98 ff 00 00 00 00	*(u64 *)(r10 - 0x68) = r3
      40:	7b 3a 90 ff 00 00 00 00	*(u64 *)(r10 - 0x70) = r3
      41:	7b 3a 88 ff 00 00 00 00	*(u64 *)(r10 - 0x78) = r3
      42:	7b 3a 80 ff 00 00 00 00	*(u64 *)(r10 - 0x80) = r3
      43:	7b 3a 78 ff 00 00 00 00	*(u64 *)(r10 - 0x88) = r3
      44:	7b 3a 70 ff 00 00 00 00	*(u64 *)(r10 - 0x90) = r3
      45:	7b 3a 68 ff 00 00 00 00	*(u64 *)(r10 - 0x98) = r3
      46:	7b 3a 60 ff 00 00 00 00	*(u64 *)(r10 - 0xa0) = r3
      47:	7b 3a 58 ff 00 00 00 00	*(u64 *)(r10 - 0xa8) = r3
      48:	7b 3a 50 ff 00 00 00 00	*(u64 *)(r10 - 0xb0) = r3
      49:	7b 3a 48 ff 00 00 00 00	*(u64 *)(r10 - 0xb8) = r3
      50:	7b 3a 40 ff 00 00 00 00	*(u64 *)(r10 - 0xc0) = r3
      51:	7b 3a 38 ff 00 00 00 00	*(u64 *)(r10 - 0xc8) = r3
      52:	7b 3a 30 ff 00 00 00 00	*(u64 *)(r10 - 0xd0) = r3
      53:	7b 3a 28 ff 00 00 00 00	*(u64 *)(r10 - 0xd8) = r3
      54:	7b 3a 20 ff 00 00 00 00	*(u64 *)(r10 - 0xe0) = r3
      55:	7b 3a 18 ff 00 00 00 00	*(u64 *)(r10 - 0xe8) = r3
      56:	7b 3a 10 ff 00 00 00 00	*(u64 *)(r10 - 0xf0) = r3
      57:	7b 3a 08 ff 00 00 00 00	*(u64 *)(r10 - 0xf8) = r3
      58:	7b 3a 00 ff 00 00 00 00	*(u64 *)(r10 - 0x100) = r3
      59:	7b 3a f8 fe 00 00 00 00	*(u64 *)(r10 - 0x108) = r3
      60:	b7 04 00 00 61 00 00 00	r4 = 0x61
      61:	73 4a f8 fe 00 00 00 00	*(u8 *)(r10 - 0x108) = r4
      62:	bf 24 00 00 00 00 00 00	r4 = r2
      63:	07 04 00 00 07 00 00 00	r4 += 0x7
;         for (__u16 j = 0; j < MAX_SERVER_NAME_LENGTH; j++) {
      64:	2d 14 0f 00 00 00 00 00	if r4 > r1 goto +0xf <LBB0_13>

0000000000000208 <LBB0_10>:
;             if (*data == '\r') {
      65:	bf 24 00 00 00 00 00 00	r4 = r2
      66:	0f 34 00 00 00 00 00 00	r4 += r3
      67:	71 45 06 00 00 00 00 00	r5 = *(u8 *)(r4 + 0x6)
      68:	15 05 0b 00 0d 00 00 00	if r5 == 0xd goto +0xb <LBB0_13>
      69:	bf a0 00 00 00 00 00 00	r0 = r10
      70:	07 00 00 00 f8 fe ff ff	r0 += -0x108
;             sn.server_name[j] = *data++;
      71:	0f 30 00 00 00 00 00 00	r0 += r3
      72:	73 50 00 00 00 00 00 00	*(u8 *)(r0 + 0x0) = r5
;             sn.length++;
      73:	69 a5 f8 ff 00 00 00 00	r5 = *(u16 *)(r10 - 0x8)
      74:	07 05 00 00 01 00 00 00	r5 += 0x1
      75:	6b 5a f8 ff 00 00 00 00	*(u16 *)(r10 - 0x8) = r5
;         for (__u16 j = 0; j < MAX_SERVER_NAME_LENGTH; j++) {
      76:	25 03 03 00 fb 00 00 00	if r3 > 0xfb goto +0x3 <LBB0_13>
      77:	07 03 00 00 01 00 00 00	r3 += 0x1
      78:	07 04 00 00 08 00 00 00	r4 += 0x8
;         for (__u16 j = 0; j < MAX_SERVER_NAME_LENGTH; j++) {
      79:	3d 41 f1 ff 00 00 00 00	if r1 >= r4 goto -0xf <LBB0_10>

0000000000000280 <LBB0_13>:
; }
      80:	b7 00 00 00 02 00 00 00	r0 = 0x2
      81:	95 00 00 00 00 00 00 00	exit
